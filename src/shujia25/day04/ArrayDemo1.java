package shujia25.day04;

/*
        数组概念:
            数组是存储同一种数据类型多个元素的集合。也可以看成是一个容器。
            数组既可以存储基本数据类型，也可以存储引用数据类型。

        数组的定义格式:
            数据类型[] 数组名;
            举例:定义一个存储int类型元素的数组: int[] arr

        数组如何进行初始化？数组的初始化其实就是在堆内存空间中开辟一组连续的空间，然后赋值给变量
        Java对数组提供了两种初始化方式：
            1、动态初始化：先开辟内存空间，赋予默认值，之后在赋值我们自己的元素值
                语句定义格式：
                    数据类型[] 数组名 = new 数据类型[m];
                    举例：创建一个可以存储3个int类型元素的数组
                        int[] arr = new int[3];
            2、静态初始化：先开辟内存空间，在初始化的时候，就可以将我们自己的元素赋值进去

 */
public class ArrayDemo1 {
    public static void main(String[] args) {
//        int[] arr;
//        System.out.println(arr);
        // int[] arr 这样的声明语句，变量arr在栈内存中被创建了，但它还没有被初始化。这意味着它还没有指向任何数组对象。
        // 在栈内存中，会分配一个空间用于存储变量 arr，但它的值为默认值 null，表示它当前没有引用任何数组对象。

        // 创建一个可以存储3个int类型元素的数组
        int[] arr = new int[3];
        /*
            左边:
                int:表示数组中的元素是int类型
                []:表示我要定义一个一维数组
                arr:数组名，符合变量的标识符命名规则
            右边:
                new:今后看到new表示在堆内存空间中开辟空间
                int:表示数组中的元素是int类型
                []:表示我要定义一个一维数组
                m:数组中的元素个数
         */
        System.out.println(arr);
        // 如何获取对应位置上的元素值呢？
        // Java中的数组从左向右，从0开始编号，我们可以通过编号来获取对应位置上的元素，这个编号又称之为下标索引
        //        语句定义格式：数组名[索引]  举例：获取第2个元素 arr[1]
        System.out.println(arr[1]); // 0

    }
}
