1、计算机

    硬件（为计算机软件运行提供物质基础）
        CPU、显示器、内存条、硬盘...

    软件
        系统软件：DOS(Disk Operating System), Windows, Linux, Unix, Mac, Android, iOS...
        应用软件：WPS，IDea，VSCode...

    系统软件是应用软件的基础。

2、认识键盘

    功能键
        Tab（缩进，一般是默认一个tab键为4个空格）
        Shift（一般是用于中英文切换）
        CTRL（一般来说，单个使用没有太大意义，一般是与其他键组合使用形成快捷键）
        alt（一般来说，单个使用没有太大意义，一般是与其他键组合使用形成快捷键）
        空格（输入一个空格）
        win（开始键，也和其他键形成快捷键）
        上下左右键（调节光标）
        PrtSc（屏幕截图，在按下同时就已经截图，只需要粘贴即可）

    快捷键（至少是2个或2个以上的键组合使用实现某种功能）
        Ctrl+A	全选
        Ctrl+C	复制
        Ctrl+V	粘贴
        Ctrl+X	剪切
        Ctrl+Z	撤销
        Ctrl+S	保存

3、常用DOS命令

    如何打开DOS命令台：
        1：开始--程序--附件--命令提示符
        2：开始--运行—cmd—回车
        3：win+r—cmd--回车

    常用DOS命令
        d: 回车	盘符切换
        dir(directory) : 列出当前目录下的文件以及文件夹
        md(make directory) : 创建目录
        rd(remove directory) : 删除目录(目录必须已经存在)
        cd(change directory) : 改变指定目录(进入指定目录)
        cd.. : 退回到上一级目录
        cd\ : 退回到根目录
        del(delete) : 删除文件,删除一堆后缀名一样的文件*.txt
        exit : 退出dos命令行
        cls(clear screen) : 清屏

4、Java语言概述

    Java语言发展史
        詹姆斯·高斯林（James Gosling）
        Java原名‘Oak’
        jdk：Java development kit

    Java语言平台版本
        javaSE/J2SE(Java 2 Platform Standard Edition)标准版
        javaEE/J2ME(Java 2 Platform Micro Edition)小型版
        javaME/J2EE(Java 2 Platform Enterprise Edition)企业版

    Java语言特点
        简单性		 解释性
        面向对象	 高性能
        分布式处理	 多线程
        健壮性		 动态
        结构中立	 安全性
        开源
        跨平台 
            Java语言的跨平台性不是由Java语言本身决定的，而是由jvm决定的

    JRE与JDK
        JRE(Java Runtime Environment    Java运行环境)
        JDK(Java Development Kit    Java开发工具包)

        JRE:JVM+类库
        JDK:JRE+JAVA的开发工具

5、jdk的下载、安装、卸载
    卸载:
        控制面板 -- 类别 -- 卸载程序
    下载（一律在官网下载）:
        https://www.oracle.com/java/technologies/downloads/#java8-windows
    安装:
        创建soft目录 -- 创建Java文件夹 -- 在Java文件夹中创建一个名叫jdk和一个叫jre的文件夹

6、helloworld案例
    开发工具介绍
        notepad(微软操作系统自带)
        Notepad++
        Eclipse
        MyEclipse

    HelloWorld
        //class代表一个类，类是Java最基本的单位，helloworld是自己起的类名
        //Javac编译后产生的.class文件名称以这里的名称为准
        class HelloWorld{
            //是一个主方法或者说是一个main方法，要想一个Java程序可以运行，就必须有一个main方法
            //main方法可以被JVM识别调用，是程序的入口
            public static void main(String [] args){
                //main方法里面的东西是逻辑主题，编写我们想要实现的业务代码
                //目前这里就一句话，这句话的意思是调用系统功能在控制台上打印一句话
                //双引号内的内容可以自己修改
                System.out.println(“Hello World”);
            }
        }

    程序解析
        首先编写java源代码程序，扩展名.java
        在命令行模式中，输入javac命令对源代码进行编译，生成字节码文件
        javac 源文件名.java
        编译完成后，如果没有报错信息，输入java命令对class字节码文件进行解释运行,执行时不需要添加.class扩展名
        java HelloWorld

    运行与工作原理
        编写Java程序
        使用javac命令让Java程序编译成计算机能读懂的文件（字节码文件）
            注意：
                命令使用：Javac Java文件使用完整名称，包括后缀名（举例：helloworld.java）
                使用完命令后会生成一个字节码文件
                思考：生成的字节码文件名称一定会和Java文件名称一样吗？
                    不一定，为什么呢？ *****
        使用Java命令运行字节码文件
            注意：
                命令使用：Java字节码文件的名称（除去后缀名）
            
    常见错误
        class的c大写了
        存在中文输入法（输出内容除外）
        有中文存在，打开Java文件另存为，修改编码为ANSI，替换
        文件扩展名隐藏导致编译失败

7、环境变量的配置
    程序的执行需要使用外部指令javac，但是javac指令仅仅能在JDK安装目录下的bin目录下时候，因此程序只能写入bin目录
    程序开发过程中，不能将源代码写入JDK的安装目录，因此需要将源程序保存到任意位置的指定目录(英文目录)，所以需要使javac指令在任意目录下可以运行
    
    通过配置path环境变量，将javac指令所在目录也就是JDK安装目录下的bin目录配置到path变量下，即可使javac指令在任意目录下运行
    总结目的：在任意目录下可以访问到javac命令和Java命令  D:\java\jdk\jdk1.8.0_172\bin

    classpath（让class文件在任意目录下可以被访问到）
        环境变量的优先级比较高，优先执行配置.;C:\;（.代表当前文件目录）
            优先级顺序：. -- C:\ 
 
8、开发使用的是IDE继承工具去开发的
    Myeclipse/Eclipse
    IDEA
        卸载
        下载
        安装
        创建项目
            注意JDK是否为自己安装的jdk
            项目文件夹需要自己创建（不要在IDEA安装目录下创建）
            同样不要有中文和空格字符等

解释Hello World程序：
    //表示类名，将来产生的clas文件名称以类名为称呼，但是规范是类名与Java文件的名称要一致
    class HelloWorld{
        //这句话是程序的入口，如果一个Java程序要运行，必须要有main方法，main方法的写法是固定格式
        public static void main(String[] args){
            //调用系统功能在控制台中输出一句话""中的内容可以修改
            System.out.println("xxxx");
        }
    }