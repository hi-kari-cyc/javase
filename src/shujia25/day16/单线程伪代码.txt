
观察以下代码，请说出是多线程程序还是单线程程序？
class Demo{
    public static void main(){
        fun1();
    }

    fun1(){
        fun2();
        fun3();
    }

    fun2(){
        ...
    }

    fun3(){
        ...
    }
}

结论：上面的是单线程程序，因为该程序只有一条执行路径从头贯穿到结束。我们在此之前写的所有程序，都可以被看作成单线程程序。
多线程程序：一个程序中存在多条执行路径的程序。
举例：有一盒火柴，其中有100根。
单线程程序：一个划火柴
多线程程序：多个人同时划火柴
从某些场景来说，多线程的环境可以提高程序的运行效率。

进程和线程的对比：
进程：（阿里云盘）
    正在运行的程序，是系统进行资源分配和调用的独立单位。
    每一个进程都有它自己的内存空间和系统资源。
线程：（多个同时下载任务）
    是进程中的单个顺序控制流，是一条执行路径
    一个进程如果只有一条执行路径，则称为单线程程序。
    一个进程如果有多条执行路径，则称为多线程程序。

进程和线程是操作系统中的基本执行单位。一个程序（进程）可以包含多个执行流（线程），线程共享进程的资源和上下文，可以并发执行。

Java程序运行原理
    java 命令会启动 java 虚拟机，启动 JVM，等于启动了一个应用程序，也就是启动了一个进程。
    该进程会自动启动一个 “主线程” ，然后主线程去调用某个类的 main 方法。
    所以 main方法运行在主线程中。在此之前的所有程序都是单线程的。

    jvm虚拟机启动是多线程的：主线程和后台线程